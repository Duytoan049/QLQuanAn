<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        1hyV/5rJsH3i4WnJpx5qWfp+OjXj++0Z589L7U25bl+3lcP6bQDAj41/jLCz3DjdI5PlH2XyfHX+/MF0
        Tpo2yUpb3dkZqx9Ir0pPyn++e8btv29juQ9rAA5GPbtcIZPr7dLD0p+NX1ntLJ9N7ZXWtIlZmlXt5P2n
        U/vc++emh2b8HdnGZB+eAGyFulquVXeUX8grsPtlYn5CJugX5vFNefxQam99bJOgn1b7ldY2Rtp3mv4m
        vSDj6A/yeN/xmMrY6sMMgEXU3hEtE/utszG4dyb3x+exnT14Y/rH1N4b/Ttp2gKhxa1d03Zt2zV+Y67/
        8/L4uFz79iZXt/YueQCMtQNa9fRyw/Erv1G5a3pIekJ6djo+/W0WkPbrjf+czkznpWkLj2Zbez/7b6Uz
        0j+l946vxZ5r0q5Nu0YPyXW7S91ebju+hg7bAbDRsuBcJ4vPrequcqcsRO1XHv9zFq3HpqekP00vS+3D
        WNrHrv7P1H408X9T+yCmL6bz07SFbxlqbxDV/o7t79r+zu3v/j9Sey7ac9I+la4t4k9Ojxk/d+05bM9l
        e07z3PanGQCW0/jXI7eX62YBvFk6Motj2zxMW1Tnrz2L+JHjr739HfJ36X8tAGB/5BXwg6cutvPYSvnt
        /mUDAAfDBgAABsgGAAAGyAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAG
        yAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAG
        yAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAG
        yAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAG
        yAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAG
        yAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAGyAYAAAbIBgAABsgGAAAG
        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
</value>
  </data>
</root>